name: CMake on Unix/Linux

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        build_type: [Release, Debug]
        include:
          - c_compiler: gcc
            cpp_compiler: g++

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y clang-tidy cmake gcc g++ libcunit1 libcunit1-dev

    - name: Prepare CMake Modules
      run: mkdir -p ${{ github.workspace }}/cmake/Modules

    - name: Add Custom FindCUnit.cmake
      run: |
        echo "find_path(CUNIT_INCLUDE_DIR CUnit/CUnit.h)" > ${{ github.workspace }}/cmake/Modules/FindCUnit.cmake
        echo "find_library(CUNIT_LIBRARY cunit)" >> ${{ github.workspace }}/cmake/Modules/FindCUnit.cmake
        echo "include(FindPackageHandleStandardArgs)" >> ${{ github.workspace }}/cmake/Modules/FindCUnit.cmake
        echo "find_package_handle_standard_args(CUnit DEFAULT_MSG CUNIT_INCLUDE_DIR CUNIT_LIBRARY)" >> ${{ github.workspace }}/cmake/Modules/FindCUnit.cmake
        echo "if(CUNIT_FOUND)" >> ${{ github.workspace }}/cmake/Modules/FindCUnit.cmake
        echo "    set(CUNIT_INCLUDE_DIRS \${CUNIT_INCLUDE_DIR})" >> ${{ github.workspace }}/cmake/Modules/FindCUnit.cmake
        echo "    set(CUNIT_LIBRARIES \${CUNIT_LIBRARY})" >> ${{ github.workspace }}/cmake/Modules/FindCUnit.cmake
        echo "endif()" >> ${{ github.workspace }}/cmake/Modules/FindCUnit.cmake

    - name: Clean Build Directory
      run: rm -rf ${{ github.workspace }}/cmake-build-debug

    - name: Configure CMake
      run: |
        cmake -B ${{ github.workspace }}/cmake-build-debug \
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
        -DCMAKE_MODULE_PATH="${{ github.workspace }}/cmake/Modules" \
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ github.workspace }}/cmake-build-debug --config ${{ matrix.build_type }}

    - name: Run Unit Tests
      working-directory: ${{ github.workspace }}/cmake-build-debug
      run: ctest --output-on-failure --build-config ${{ matrix.build_type }}
